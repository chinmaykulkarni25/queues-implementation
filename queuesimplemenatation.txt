#include<stdio.h>
#include<stdlib.h>
#define max 100

int front = -1;
int rare = -1;
int queue[max];

void enqueue(){
    int n;
    printf("Enter the element to add: ");
    scanf("%d", &n);
    if (rare == max - 1) {
        printf("Queue is full\n");
    } else {
        if (front == -1) {  // If queue is empty, set front to 0
            front = 0;
        }
        rare++;
        queue[rare] = n;
    }
}

void dequeue(){
    if (front == -1 || front > rare) {
        printf("Queue is empty\n");
    } else {
        printf("Dequeued element: %d\n", queue[front]);
        front++;
        if (front > rare) {  // Reset the queue if it's empty after dequeue
            front = rare = -1;
        }
}

void print(){
    if (front == -1 || front > rare) {
        printf("Queue is empty\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rare; i++) {  // Loop should go up to rare
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main(){
    int ch;
    while(1) {
        printf("Following are the operations of the queue:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Print\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch(ch) {
            case 1: 
                enqueue();
                break;
            case 2: 
                dequeue();
                break;
            case 3: 
                print();
                break;
            case 4:
                printf("Exiting program...\n");
                exit(0);
            default:
                printf("You entered an invalid choice\n");
        }
    }
    return 0;
}
